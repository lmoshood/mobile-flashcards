{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { connect } from 'react-redux';\nimport styles from \"../utils/styles\";\n\nvar DeckListCard = function (_Component) {\n  _inherits(DeckListCard, _Component);\n\n  var _super = _createSuper(DeckListCard);\n\n  function DeckListCard() {\n    var _this;\n\n    _classCallCheck(this, DeckListCard);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this.handleDeckCardRoute = function () {\n      var _this$props = _this.props,\n          cardsCount = _this$props.cardsCount,\n          title = _this$props.title,\n          navigation = _this$props.navigation;\n      navigation.navigate('Deck', {\n        title: title,\n        cardsCount: cardsCount\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(DeckListCard, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          title = _this$props2.title,\n          cardsCount = _this$props2.cardsCount;\n      return React.createElement(View, {\n        style: styles.card\n      }, React.createElement(TouchableOpacity, {\n        onPress: this.handleDeckCardRoute\n      }, React.createElement(Text, {\n        style: styles.cardHeader\n      }, title), React.createElement(Text, {\n        style: styles.cardSubHeader\n      }, cardsCount <= 1 ? cardsCount + ' card' : cardsCount + ' cards')));\n    }\n  }]);\n\n  return DeckListCard;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(decks, _ref) {\n  var title = _ref.title,\n      navigation = _ref.navigation;\n  var cardsCount = decks[title].questions.length;\n  return {\n    title: title,\n    cardsCount: cardsCount,\n    navigation: navigation\n  };\n};\n\nexport default connect(mapStateToProps)(DeckListCard);","map":{"version":3,"sources":["C:/Users/User/Desktop/test/Mobile-FlashCard-React-Native-main3/components/DeckListCard.js"],"names":["React","Component","connect","styles","DeckListCard","handleDeckCardRoute","props","cardsCount","title","navigation","navigate","card","cardHeader","cardSubHeader","mapStateToProps","decks","questions","length"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,MAAP;;IAEMC,Y;;;;;;;;;;;;;;;;UACJC,mB,GAAsB,YAAM;AAC1B,wBAA0C,MAAKC,KAA/C;AAAA,UAAQC,UAAR,eAAQA,UAAR;AAAA,UAAoBC,KAApB,eAAoBA,KAApB;AAAA,UAA2BC,UAA3B,eAA2BA,UAA3B;AAEAA,MAAAA,UAAU,CAACC,QAAX,CAAoB,MAApB,EAA4B;AAC1BF,QAAAA,KAAK,EAALA,KAD0B;AAE1BD,QAAAA,UAAU,EAAVA;AAF0B,OAA5B;AAID,K;;;;;;;WAED,kBAAS;AACP,yBAA8B,KAAKD,KAAnC;AAAA,UAAQE,KAAR,gBAAQA,KAAR;AAAA,UAAeD,UAAf,gBAAeA,UAAf;AAEA,aACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAGJ,MAAM,CAACQ;AAArB,SACE,oBAAC,gBAAD;AAAkB,QAAA,OAAO,EAAG,KAAKN;AAAjC,SACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAGF,MAAM,CAACS;AAArB,SACEJ,KADF,CADJ,EAIE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAGL,MAAM,CAACU;AAArB,SACIN,UAAU,IAAI,CAAd,GACEA,UAAU,GAAG,OADf,GAEEA,UAAU,GAAG,QAHnB,CAJF,CADF,CADF;AAeD;;;;EA5BwBN,S;;AA+B1B,IAAMa,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,QAAkC;AAAA,MAAxBP,KAAwB,QAAxBA,KAAwB;AAAA,MAAjBC,UAAiB,QAAjBA,UAAiB;AACzD,MAAMF,UAAU,GAAGQ,KAAK,CAACP,KAAD,CAAL,CAAaQ,SAAb,CAAuBC,MAA1C;AAEA,SAAO;AACLT,IAAAA,KAAK,EAALA,KADK;AAELD,IAAAA,UAAU,EAAVA,UAFK;AAGLE,IAAAA,UAAU,EAAVA;AAHK,GAAP;AAKD,CARA;;AAUD,eAAeP,OAAO,CAACY,eAAD,CAAP,CAAyBV,YAAzB,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport { View, Text, TouchableOpacity } from 'react-native'\nimport { connect } from 'react-redux'\nimport styles from '../utils/styles'\n\nclass DeckListCard extends Component {\n  handleDeckCardRoute = () => {\n    const { cardsCount, title, navigation } = this.props\n\n    navigation.navigate('Deck', {\n      title,\n      cardsCount\n    })\n  }\n\n  render() {\n    const { title, cardsCount } = this.props\n\n    return (\n      <View style={ styles.card }>\n        <TouchableOpacity onPress={ this.handleDeckCardRoute }>\n            <Text style={ styles.cardHeader }>\n            { title }\n          </Text>\n          <Text style={ styles.cardSubHeader }>\n            { cardsCount <= 1\n              ? cardsCount + ' card'\n              : cardsCount + ' cards'\n            }\n          </Text>\n        </TouchableOpacity>\n      </View>\n    )\n  }\n}\n\n const mapStateToProps = (decks, { title, navigation }) => {\n  const cardsCount = decks[title].questions.length\n\n  return {\n    title,\n    cardsCount,\n    navigation\n  }\n}\n\nexport default connect(mapStateToProps)(DeckListCard)\n"]},"metadata":{},"sourceType":"module"}