{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { QUIZ_STORAGE_KEY, setData } from \"./Mockups\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nexport function getAllDecks() {\n  var result;\n  return _regeneratorRuntime.async(function getAllDecks$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(AsyncStorage.getItem(QUIZ_STORAGE_KEY));\n\n        case 2:\n          result = _context.sent;\n          return _context.abrupt(\"return\", setData(result));\n\n        case 4:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\nexport function addDeck(_ref) {\n  var deckID = _ref.deckID,\n      entry = _ref.entry;\n  return AsyncStorage.mergeItem(QUIZ_STORAGE_KEY, JSON.stringify(_defineProperty({}, deckID, entry)));\n}\nexport var ShowAlert = function ShowAlert(title, msg) {\n  Alert.alert(title, msg, [{\n    text: \"OK\",\n    onPress: function onPress() {\n      return console.log(\"OK Pressed\");\n    }\n  }]);\n};","map":{"version":3,"sources":["C:/Users/User/Desktop/test/Mobile-FlashCard-React-Native-main3/utils/api.js"],"names":["AsyncStorage","QUIZ_STORAGE_KEY","setData","getAllDecks","getItem","result","addDeck","deckID","entry","mergeItem","JSON","stringify","ShowAlert","title","msg","Alert","alert","text","onPress","console","log"],"mappings":";;AAAA,OAAOA,YAAP,MAA0B,2CAA1B;AACA,SAASC,gBAAT,EAA2BC,OAA3B;;AAGA,OAAO,SAAeC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACgBH,YAAY,CAACI,OAAb,CAAqBH,gBAArB,CADhB;;AAAA;AACCI,UAAAA,MADD;AAAA,2CAEEH,OAAO,CAACG,MAAD,CAFT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKP,OAAO,SAASC,OAAT,OAAoC;AAAA,MAAjBC,MAAiB,QAAjBA,MAAiB;AAAA,MAATC,KAAS,QAATA,KAAS;AACzC,SAAOR,YAAY,CAACS,SAAb,CAAuBR,gBAAvB,EAAyCS,IAAI,CAACC,SAAL,qBAC7CJ,MAD6C,EACpCC,KADoC,EAAzC,CAAP;AAGD;AAGD,OAAO,IAAMI,SAAS,GAAG,SAAZA,SAAY,CAACC,KAAD,EAAQC,GAAR,EAAgB;AACvCC,EAAAA,KAAK,CAACC,KAAN,CACEH,KADF,EAEEC,GAFF,EAGE,CACE;AAAEG,IAAAA,IAAI,EAAE,IAAR;AAAcC,IAAAA,OAAO,EAAE;AAAA,aAAMC,OAAO,CAACC,GAAR,CAAY,YAAZ,CAAN;AAAA;AAAvB,GADF,CAHF;AAOD,CARM","sourcesContent":["import AsyncStorage  from '@react-native-async-storage/async-storage'\nimport { QUIZ_STORAGE_KEY, setData } from './Mockups'\nimport {Alert} from 'react-native'\n\nexport async function getAllDecks() {\n  const result = await AsyncStorage.getItem(QUIZ_STORAGE_KEY)\n  return setData(result)\n}\n\nexport function addDeck({ deckID, entry }) {\n  return AsyncStorage.mergeItem(QUIZ_STORAGE_KEY, JSON.stringify({\n    [deckID]: entry\n  }))\n}\n\n\nexport const ShowAlert = (title, msg) => {\n  Alert.alert(\n    title,\n    msg,\n    [\n      { text: \"OK\", onPress: () => console.log(\"OK Pressed\") }\n    ]\n  );\n}"]},"metadata":{},"sourceType":"module"}