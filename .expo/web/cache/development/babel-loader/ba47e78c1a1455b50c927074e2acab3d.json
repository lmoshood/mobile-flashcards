{"ast":null,"code":"import React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextButton from \"./TextButton\";\nimport { white, water } from \"../utils/colors\";\nimport styles from \"../utils/styles\";\nexport default function QuizScore(_ref) {\n  var correctAnsCount = _ref.correctAnsCount,\n      incorrectAnsCount = _ref.incorrectAnsCount,\n      restartQuiz = _ref.restartQuiz,\n      backToDeck = _ref.backToDeck;\n  var QutCount = correctAnsCount + incorrectAnsCount;\n  var percentage = correctAnsCount / QutCount * 100;\n  return React.createElement(View, {\n    style: [styles.QRcontainer, {\n      justifyContent: 'space-around'\n    }]\n  }, React.createElement(Text, {\n    style: styles.QRheader\n  }, \"Quiz Results\"), React.createElement(View, {\n    style: {\n      justifyContent: 'space-around'\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 28,\n      color: white,\n      fontWeight: '700',\n      textAlign: 'center',\n      marginBottom: 20\n    }\n  }, \"Your Score: \", percentage.toFixed(0), \"%\"), React.createElement(View, {\n    style: {\n      flexDirection: 'row',\n      justifyContent: 'space-around'\n    }\n  }, React.createElement(Text, {\n    style: styles.QRresultsDetails\n  }, \"Correct:\"), React.createElement(Text, {\n    style: styles.QRresultsDetails\n  }, correctAnsCount, \" out of \", QutCount)), React.createElement(View, {\n    style: {\n      flexDirection: 'row',\n      justifyContent: 'space-around'\n    }\n  }, React.createElement(Text, {\n    style: styles.QRresultsDetails\n  }, \"Wrong:\"), React.createElement(Text, {\n    style: styles.QRresultsDetails\n  }, incorrectAnsCount, \" out of \", QutCount))), React.createElement(View, null, React.createElement(TextButton, {\n    style: [styles.QRbutton, {\n      backgroundColor: water\n    }],\n    onPress: restartQuiz\n  }, \"Restart Quiz\"), React.createElement(TextButton, {\n    style: [styles.QRbutton, {\n      backgroundColor: water\n    }],\n    onPress: backToDeck\n  }, \"Back to Deck List\")));\n}","map":{"version":3,"sources":["C:/Users/User/Desktop/test/Mobile-FlashCard-React-Native-main3/components/QuizScore.js"],"names":["React","TextButton","white","water","styles","QuizScore","correctAnsCount","incorrectAnsCount","restartQuiz","backToDeck","QutCount","percentage","QRcontainer","justifyContent","QRheader","fontSize","color","fontWeight","textAlign","marginBottom","toFixed","flexDirection","QRresultsDetails","QRbutton","backgroundColor"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,OAAOC,UAAP;AACA,SAASC,KAAT,EAAgBC,KAAhB;AACA,OAAOC,MAAP;AAGA,eAAe,SAASC,SAAT,OAMf;AAAA,MALEC,eAKF,QALEA,eAKF;AAAA,MAJEC,iBAIF,QAJEA,iBAIF;AAAA,MAHEC,WAGF,QAHEA,WAGF;AAAA,MAFEC,UAEF,QAFEA,UAEF;AACE,MAAMC,QAAQ,GAAGJ,eAAe,GAAGC,iBAAnC;AACA,MAAMI,UAAU,GAAIL,eAAe,GAAGI,QAAnB,GAA+B,GAAlD;AAEA,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAG,CAACN,MAAM,CAACQ,WAAR,EAAqB;AAAEC,MAAAA,cAAc,EAAE;AAAlB,KAArB;AAAd,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAGT,MAAM,CAACU;AAArB,oBADF,EAEE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAED,MAAAA,cAAc,EAAE;AAAlB;AAAb,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEE,MAAAA,QAAQ,EAAE,EAAZ;AAAgBC,MAAAA,KAAK,EAACd,KAAtB;AAA6Be,MAAAA,UAAU,EAAE,KAAzC;AACZC,MAAAA,SAAS,EAAE,QADC;AACSC,MAAAA,YAAY,EAAE;AADvB;AAAb,qBAEgBR,UAAU,CAACS,OAAX,CAAmB,CAAnB,CAFhB,MADF,EAKE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEC,MAAAA,aAAa,EAAE,KAAjB;AAAwBR,MAAAA,cAAc,EAAE;AAAxC;AAAb,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAGT,MAAM,CAACkB;AAArB,gBADF,EAIE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAGlB,MAAM,CAACkB;AAArB,KACMhB,eADN,cACiCI,QADjC,CAJF,CALF,EAaE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEW,MAAAA,aAAa,EAAE,KAAjB;AAAwBR,MAAAA,cAAc,EAAE;AAAxC;AAAb,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAGT,MAAM,CAACkB;AAArB,cADF,EAIE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAGlB,MAAM,CAACkB;AAArB,KACIf,iBADJ,cACiCG,QADjC,CAJF,CAbF,CAFF,EAwBE,oBAAC,IAAD,QACI,oBAAC,UAAD;AACE,IAAA,KAAK,EAAG,CAACN,MAAM,CAACmB,QAAR,EAAkB;AAAEC,MAAAA,eAAe,EAAErB;AAAnB,KAAlB,CADV;AAEE,IAAA,OAAO,EAAGK;AAFZ,oBADJ,EAMI,oBAAC,UAAD;AACE,IAAA,KAAK,EAAG,CAACJ,MAAM,CAACmB,QAAR,EAAkB;AAAEC,MAAAA,eAAe,EAAErB;AAAnB,KAAlB,CADV;AAEE,IAAA,OAAO,EAAGM;AAFZ,yBANJ,CAxBF,CADF;AAuCD","sourcesContent":["import React from 'react'\nimport { View, Text } from 'react-native'\nimport TextButton from './TextButton'\nimport { white, water} from '../utils/colors'\nimport styles from '../utils/styles'\n\n\nexport default function QuizScore({\n  correctAnsCount,\n  incorrectAnsCount,\n  restartQuiz,\n  backToDeck \n}) \n{\n  const QutCount = correctAnsCount + incorrectAnsCount\n  const percentage = (correctAnsCount / QutCount) * 100\n\n  return(\n    <View style={ [styles.QRcontainer, { justifyContent: 'space-around'}] }>\n      <Text style={ styles.QRheader }>Quiz Results</Text>\n      <View style={{ justifyContent: 'space-around' }}>\n        <Text style={{ fontSize: 28, color:white, fontWeight: '700',\n         textAlign: 'center', marginBottom: 20 }}>\n          Your Score: { percentage.toFixed(0) }%\n        </Text>\n        <View style={{ flexDirection: 'row', justifyContent: 'space-around' }}>\n          <Text style={ styles.QRresultsDetails }>\n              Correct:\n          </Text>\n          <Text style={ styles.QRresultsDetails }>\n              { correctAnsCount } out of { QutCount }\n          </Text>\n        </View>\n        <View style={{ flexDirection: 'row', justifyContent: 'space-around' }}>\n          <Text style={ styles.QRresultsDetails }>\n          Wrong:\n          </Text>\n          <Text style={ styles.QRresultsDetails }>\n            { incorrectAnsCount } out of { QutCount }\n          </Text>\n        </View>\n      </View>\n      <View >\n          <TextButton\n            style={ [styles.QRbutton, { backgroundColor: water }]}\n            onPress={ restartQuiz }>\n              Restart Quiz\n          </TextButton>\n          <TextButton\n            style={ [styles.QRbutton, { backgroundColor: water }]}\n            onPress={ backToDeck }>\n              Back to Deck List\n          </TextButton>\n      </View>\n    </View>\n  )\n}\n\n"]},"metadata":{},"sourceType":"module"}