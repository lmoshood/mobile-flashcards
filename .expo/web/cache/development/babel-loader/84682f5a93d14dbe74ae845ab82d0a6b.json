{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { connect } from 'react-redux';\nimport { getAllDecks } from \"../utils/api\";\nimport { DisplayDecks } from \"../actions\";\nimport DeckListCard from \"./DeckListCard\";\nimport styles from \"../utils/styles\";\n\nvar Decks = function (_Component) {\n  _inherits(Decks, _Component);\n\n  var _super = _createSuper(Decks);\n\n  function Decks() {\n    _classCallCheck(this, Decks);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Decks, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var dispatch = this.props.dispatch;\n      getAllDecks().then(function (decks) {\n        return dispatch(DisplayDecks(decks));\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var decks = this.props.decks;\n      return React.createElement(View, {\n        style: styles.Deckscontainer\n      }, React.createElement(ScrollView, null, React.createElement(Text, {\n        style: styles.Decksheader\n      }, \"Decks\"), Object.keys(decks).map(function (deckName) {\n        return React.createElement(DeckListCard, {\n          key: deckName,\n          title: decks[deckName].title,\n          navigation: _this.props.navigation\n        });\n      })));\n    }\n  }]);\n\n  return Decks;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(decks) {\n  return {\n    decks: decks\n  };\n};\n\nexport default connect(mapStateToProps)(Decks);","map":{"version":3,"sources":["C:/Users/User/Desktop/test/Mobile-FlashCard-React-Native-main3/components/Decks.js"],"names":["React","Component","connect","getAllDecks","DisplayDecks","DeckListCard","styles","Decks","dispatch","props","then","decks","Deckscontainer","Decksheader","Object","keys","map","deckName","title","navigation","mapStateToProps"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT;AACA,SAASC,YAAT;AACA,OAAOC,YAAP;AACA,OAAOC,MAAP;;IAEMC,K;;;;;;;;;;;;;WACJ,6BAAoB;AAClB,UAAQC,QAAR,GAAqB,KAAKC,KAA1B,CAAQD,QAAR;AAEAL,MAAAA,WAAW,GACRO,IADH,CACQ,UAACC,KAAD;AAAA,eAAWH,QAAQ,CAACJ,YAAY,CAACO,KAAD,CAAb,CAAnB;AAAA,OADR;AAED;;;WAGD,kBAAS;AAAA;;AACP,UAAQA,KAAR,GAAkB,KAAKF,KAAvB,CAAQE,KAAR;AAEA,aACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAGL,MAAM,CAACM;AAArB,SACE,oBAAC,UAAD,QACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAGN,MAAM,CAACO;AAArB,iBADF,EAEIC,MAAM,CAACC,IAAP,CAAYJ,KAAZ,EAAmBK,GAAnB,CAAuB,UAACC,QAAD;AAAA,eACvB,oBAAC,YAAD;AACE,UAAA,GAAG,EAAGA,QADR;AAEE,UAAA,KAAK,EAAGN,KAAK,CAACM,QAAD,CAAL,CAAgBC,KAF1B;AAGE,UAAA,UAAU,EAAG,KAAI,CAACT,KAAL,CAAWU;AAH1B,UADuB;AAAA,OAAvB,CAFJ,CADF,CADF;AAcD;;;;EA1BiBlB,S;;AA+BpB,IAAMmB,eAAe,GAAG,SAAlBA,eAAkB,CAACT,KAAD,EAAW;AACjC,SAAO;AACLA,IAAAA,KAAK,EAALA;AADK,GAAP;AAGD,CAJD;;AAMA,eAAeT,OAAO,CAACkB,eAAD,CAAP,CAAyBb,KAAzB,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport { View, Text, ScrollView } from 'react-native'\nimport { connect } from 'react-redux'\nimport { getAllDecks } from '../utils/api'\nimport { DisplayDecks } from '../actions'\nimport DeckListCard from './DeckListCard'\nimport styles from '../utils/styles'\n\nclass Decks extends Component {\n  componentDidMount() {\n    const { dispatch } = this.props\n\n    getAllDecks()\n      .then((decks) => dispatch(DisplayDecks(decks)))\n  }\n\n\n  render() {\n    const { decks } = this.props\n    \n    return (\n      <View style={ styles.Deckscontainer }>\n        <ScrollView>\n          <Text style={ styles.Decksheader }>Decks</Text>\n          { Object.keys(decks).map((deckName) => (\n            <DeckListCard\n              key={ deckName }\n              title={ decks[deckName].title }\n              navigation={ this.props.navigation }\n            />\n          ))}\n        </ScrollView>\n      </View>\n    )\n  }\n}\n\n\n\nconst mapStateToProps = (decks) => {\n  return {\n    decks\n  }\n}\n\nexport default connect(mapStateToProps)(Decks)\n"]},"metadata":{},"sourceType":"module"}